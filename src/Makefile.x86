CFILES = $(wildcard *.c)
OFILES = $(CFILES:.c=.o)
GCCPATH = /usr/bin/gcc-arm-none-elf/bin/aarch64-none-elf
GCC = /usr/bin/gcc-arm-none-elf/bin/aarch64-none-elf-gcc
AS = /usr/bin/gcc-arm-none-elf/bin/aarch64-none-elf-as
LD = /usr/bin/gcc-arm-none-elf/bin/aarch64-none-elf-ld
OBJCOPY = /usr/bin/gcc-arm-none-elf/bin/aarch64-none-elf-objcopy
GCCFLAGS = -Wall -O2 -ffreestanding -nostdinc -nostdlib -nostartfiles

ARMGCC = aarch64-none-elf

all: clean kernel8.img

boot:
	$(AS) -c boot.s -o boot.o

%.o: %.c
	$(GCC) $(GCCFLAGS) -c $< -o $@

kernel8.img: boot.o $(OFILES)
	$(LD) -m aarch64elf -nostdlib boot.o $(OFILES) -T link.ld -o kernel8.elf
	$(OBJCOPY) -O binary kernel8.elf kernel8.img

clean:
	/bin/rm kernel8.elf *.o *.img > /dev/null 2> /dev/null || true
